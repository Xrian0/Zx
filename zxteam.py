import base64
exec(base64.b64decode("import base64
exec(base64.b64decode("aW1wb3J0IGJhc2U2NApleGVjKGJhc2U2NC5iNjRkZWNvZGUoImFXMXdiM0owSUdKaGMyVTJOQXBsZUdWaktHSmhjMlUyTkM1aU5qUmtaV052WkdVb0ltRlhNWGRpTTBvd1NVZEthR015VlRKT1FYQnNaVWRXYWt0SFNtaGpNbFV5VGtNMWFVNXFVbXRhVjA1MldrZFZiMGxyYkRWU1dGcHJWMFUxTlZSRVNrdGpSMHB3VDFkNGFXSnNiRzVaTUdoelRVZEdTRTlZVms1a01qbHhWbGQwVjFSc1JsWmtSVnBLVWxWd1lWTlZXbTlsVjBaWVVtNVdSR0ZWTlZaV1JFRTFWRlpXTlZGclRsZFdWM2hPVld0T1FtVlZOWEJQU0doT1VYcG9OVlJWVWtwbFJVNXdWR3hrVG1ReU9YRlhWekZIWkZkV1dGSnVTa3BTTTFKdldXMXNRbE13YTNsVGJXaHBZbTE0YjFsWWJFTmpiR3hZVGtka1JHRlZOWEJYVm1NeFRsWnNXR015WkdoTmExb3hVMVZHZG1Gc2JIUlNibFpzVmpCYWVWTlZaREJoUjBwd1VWVjBTazFyY0c5WmJUVnpZVWRHTlZGdVNscFdlbEp1VVRKc1QyRldiRmhPVkZaYVZqTk9ibGxVU2tka1ZXeENZakp3V21KVldqRmFWbVJIWTJ0c1NHUkhhR2xoVlVaTVUxUktTMkZIU25WaVIyaG9aVlZLZVZkV1l6QmFNRTV3Vkcxc1dsWjZWVEZYVm1SNldqSkZlVkp1VmtwUlZ6bHhWMWN4UjJSWFZsaFNia3BLVWpOU2IxbHRiRUpUTUd0NVUyMW9hV0p0ZUc5WldHeERZMnhzV0U1SFpFUmhWVFYxV1Zoc1EyVnRVbGhrUjJoS1VqQnZNVmxxU1RGaVJVNXdWRzFzV2xaNlZURlhWbVI2V2pKRmVWSnVWa3BSVnpseFYxY3hSMlJYVmxoU2JrcEtVak5TYjFsdGJFSlRNR3Q1VTIxb2FXSnRlRzlaV0d4RFkyeHNXRTVIWkVSaFZUVndWMVpqTVU1V2JGaGpNbVJvVFd0YU1WTlZSblpoYkd4MFVtNVdiRll3V25sVFZXUXdZVWRLY0ZGVmRFcE5hM0J2V1cwMWMyRkhSalZSYmtwYVZucFNibEV5YkU5aFZteFlUbFJXV2xZelRtNVpWRXBIWkZWc1FtSXljRnBpVlZveFdsWmtSMk5yYkVoa1IyaHBZVlZHVEZOVVNrdGhSMHAxWWtkb2FHVlZTbmxYVm1Nd1dqQk9jRlJ0YkZwV2VsVXhWMVprZWxveVJYbFNibFpLVVZjNWNWZFhNVWRrVjFaWVVtNUtTbEl6VW05WmJXeENVekJyZVZOdGFHbGliWGh2V1Zoc1EyTnNiRmhPUjJSRVlWVTFjRmRXWXpGT1ZteFlZekprYUUxcldqRlRWVVoyWVd4c2RGSnVWbXhXTUZwNVUxVmtNR0ZIU25CUlZYUktUV3R3YjFsdE5YTmhSMFkxVVc1S1dsWjZVbTVSTW14UFlWWnNXRTVVVmxwV00wNXVXVlJLUjJSVmJFSmlNbkJhWWxWYU1WcFdaRWRqYTJ4SVpFZG9hV0ZWUmt4VFZFcExZVWRLZFdKSGFHaGxWVXA1VjFaak1Gb3dUbkJVYld4YVZucFZNVmRXWkhwYU1rVjVVbTVXU2xGWE9YRlhWekZIWkZkV1dGSnVTa3BTTTFKdldXMXNRbE13YTNsVGJXaHBZbTE0YjFsWWJFTmpiR3hZVGtka1JHRlZOWEJYVm1NeFRsWnNXR015WkdoTmExb3hVMVZHZG1Gc2JIUlNibFpzVmpCYWVWTlZaREJoUjBwd1VWVjBTazFyY0c5WmJUVnpZVWRHTlZGdVNscFdlbEp1VVRJeGMyUkhUa2hQV0d4clVUQktOVmRXWXpGaE1rbDVUVVYwYUZaNlJqTlphazVMVFVWc1NWUnVXbHBOYmxKeldrVkdkMk5IU2xsUmJscHFZbXhHYmxwRlpHOWxWbkJZVW0xMGFGWjZWblZSTWpGelpFZE9TRTlZYkd0Uk1FbzJXbFpvVGxNeVJsaE5XR1JwVFRCdmQxTlZZelZsYTA1MFlraFNhbEo2YkRWYVJVNURaVzFHV0ZwSVZscFdNMlJNV1ZaamVHUXlTWHBUYWtKS1UwWktkMWxzWkZaVE1YQjFVMjVhYVZVd1NqSlpNMnhEWTBkS1dWRnVXbXBpYkVadVdYcE9jMlZ0VWtoV2JsSk5VVEJLTVZkV1kzaGlSVTV1WTBoYWFtVlVWalphVm1oUFRVWndXRTFIT1VwaVZUVjZWMnhrUjJWVmJIQmhNSFJxVTBWd2QxbHROVkppTUd4d1UxZHNSR0pJWkROVVdIQlBXV3M1VlZKdVVrcFJWemxNVGtoQ2FGVjZVbmRaVldzd1kwZEdTbE5WVGtKYWVsSjNXVlZyTUdOSFJrcE9TRUpvVlRCc1VGTXhaSEJVTUhSWVlWVTVURll5WkZCVE1XUndWREIwV0dGVk9VeFdNbXhFVVZka1NsUXdkRmhoVlRsTVZqSnNVRk14WkhKbFZWSndZa2M1VldGWGVIWldSMnh6WWpGR2JsTlZUa0phTUd4RVVWZGpNR05IUmtwT1NFSm9VMVJTZDFsVmF6QmpSMFpHVTFWT1Fsb3diRkJUTVdSd1VUQkdURTVJUW1oVmVsSjNXVlpPU2xRd2RGaGhWVTVGWVZkNGRsb3lZekJqUjBaVVRraENhRlZxVW5kWlZsRXdZMGRHU2s1SVFtaFRWV3hRVXpGa2NtRlZVbkJpUnpseFlWZDRkbUZ0YkhOalJYaHdZa2hDVVdGWGVIWmhiV3h6WWpKd2NHSklRazFoVjNoM1ZFZHNjMkl5Y0hCaVJ6bHhZVmQ0ZG1GdGJITmlNbkJ3WWtjNVVsb3diRVJSVjJSS1ZEQjBXR0ZWT1V4V01teEVVa2RzYzJJd1VuQmlSemx1V2pCc1JGSkhiSE5pTW1SdVVUTldURll5ZEd4VE1XUnlWVEJHYms1SVFtaFRWV3hFVVZkak1HTkhSbE5PU0VKb1ZrUlNkMWxWYXpCalIwWktVMVU1VEZZeWRHeFRNV1J2VkRCMFdHRlZUa1ZoVjNoM1ZFZHNjMk5GZUhCaVJ6bHhZVmQ0ZG1GdGJITmpSWGh3WWtoQ1RXRlhlSFpoYld4ellqSmtibE5WT1V4V01tUlFVekZrY0ZRd2RGaGhSVTVDV25wU2QxbFdVVEJqUjBaS1RraENhRk5WYkVSU1IyeHpZakJTY0dKSE9XNWFlbEozV1ZWck1HTkhSa3BPU0VKb1ZUQk9jRkpIYkhOalJWWnVUa2hDYUZOVmJGQlRNV1J3VVRCU2NHSklRa3BhZWxKM1dWWk5NR05IUmtwT1NFSm9VMVJTZDFsVlJUQmpSMFpDVGtoQ2FGTlVVbmRaVlZaS1VUQlNjR0pJUWtsaFYzaDJZVzFzYzJJeWNIQmlTRUpKWVZkNGQxTkhiSE5pTW5Cd1lrYzVjV0ZYZUhaV1IyeHpZakZTY0dKSE9WVmhWM2gyVmtkc2MySXljSEJpUnpsdVducFNkMWxXVVRCalIwWktUa2hDYUZOVVVuZFpWazVLVVRCU2NHSklRa1ZoVjNoMlpXMXNjMkl5Y0hCaVJ6bHhZVmQ0ZDFOVmN6QmpSMFpVVGtoQ2FGTlVVbmRaVldzd1kwZEdWRk5WT1V4V01uUXhVekZrY0ZRd2RGaGhWVGxNVmpKME1WTXhaSEphVlhSWVlWVTVURll5YkZCVE1XUnlaVlZTY0dKSVFrMWhWM2gyWVcxc2MySXljSEJpU0VKTllWZDRkMU5IYkhOaU1uQndZa2M1Y1dGWGVIZFNWMk13WTBkR1ZVNUlRbWhUVld4RVVWZGpNR05IUmxWT1NFSm9VMVJTZDFsVmF6QmpSMFpVVGtoQ2FGVjZVbmRaVldzd1kwZEdTazVJUW1oVmEyeEVVVmRqTUdOSFJsVk9TRUpvVTFSU2QxbFZhekJqUjBaVFVUTldURll5ZERGVE1XUnlZVlZTY0dKSVFrWmFlbEozV1ZaSk1HTkhSbFZUVlRsTVZqSjBiRk14WkhKVk1GSndZa2hDVFdGWGVIZFVWMk13WTBkR1UwNUlRbWhWZWxKM1dWWlJNR05IUmxOT1NFSm9WV3BTZDFsV1VrcFJNRVp1VGtoQ2FGVjZVbmRaVms1S1VUQkdiazVJUW1oV1JGSjNXVlpOTUdOSFJrcE9TRUpvVldwU2QxbFdTa3BVTUhSWVlUTldURll5ZEZSUlYyUktWREIwV0dFeWJFVmhWM2gzVTFka1JHUlZkRmhoTWxaTVZqSjBWRkZYWkVwVU1IUllZVEpXVEZZeWRIQlNSMnh6WTBWV2JsTlZPVXhXTW5Sc1V6RmtjbUZWVW5CaVNFSkdXbnBTZDFsV1RUQmpSMFpUVTFVNVRGWXlkSEJTUjJ4elkwVldibE5WT1V4V01uUndVVmRrU2xRd2RGaGhNMVpNVmpKMGNGSkhiSE5qUldod1lraENSbHA2VW5kWlZra3dZMGRHVTFOVlRrSmFlbEozV1ZaS1NsUXdkRmhoTTFaTVZqSjBVbUl5WXpCalIwWlRVMVZPUWxvd2JGQlRNV1J5VlRCR2JsTlZUa1ZoVjNoM1UwZHNjMk5GVm01VFZVNUZZVmQ0ZDFKWFpFcFVNSFJZWVRKc1JXRlhlSGRTVjJSS1ZEQjBXR0V4VGtKYU1HeFFVekZrY21GVlJtNVRWVTVDV2pCc1VGTXhaSEpWTUVadVUxVTVURll5ZEZSU1IyeHpZMFZXYmxFeWJFVmhWM2gzVWxka1NsRXdSbTVPU0VKb1ZXdHNSRkZYWkVwUk1GSndZa2hDUmxvd2JFUlJWMlJLVVRCU2NHSklRa1phTUd4RVVWZGtTbEV3Um01VFZUbE1WakowVkZGWFl6QmpSMFpUVTFWT1Fsb3diRVJSVjJSS1VUQkdiazVJUW1oVmEyeENZakprU2xFd1JtNVRWVTVDV2pCc1JGRlhaRXBSTUVadVUxVk9RbG93YkVSUlYyUktVVEJHYmxOVlRrSmFNR3hFVVZka1NsRXdSbTVUVlU1Q1dqQnNSRkZYWkVwUk1FWnVVMVZPUWxvd1RtNWlNbXhLWVZWc2QxRXlaSFpoYkZKSVQxYzFhRlo2VWt4Uk1qVkRZVWROZWxScVRtbE5NSEJ5VTFWUmQyRlhWblZoUkVKaFZqQmFNRk5YWkhaVE1YQjBUMWhzU2xJeWRHNVpWbU13V2pKT2RGSnVWbUZOYkZaMlZGaHNjazVyVG01aVNHUnJUV3hHYmxWR1RrTmpSMHAxVVdwR2ExRXlaSEJYUlZKQ1pXc3dlR042Vms1TmFrRnlVMVZWZUdGSFRYcFdia3BhVm5wU2JsWlZaRWRsYlUxNldraGFhbUpXUm01VU1teENZVlYwVW1Jd2NHaGhha0kyVVRKa2MyTkdjSEJoU0dSclRXeEZOVlZHYUVOaFIwMTZWR3BPYVUwd2NISlRNVkoyVXpCT1VtSkVRbWhXZWtaelZFYzFUMk14Y0ZoV2JtUk1Va1pXZDFFeVpISlRiVTVKVTI1Q2FXSnNSblpUVjNnelpEQXhObFJ0U2xCV1JYQXdWbXRvVjJSV2IzbGFSRVpLVWtaV2JsVnJaRmROUjBaWVl6SnNURlZYT1V0Uk1XUkxaVlp3V0ZKdVNrUmFNbmh6V1d0b1QySkZPVzVpTUhCRVYwWktkMWxzWkZaa1YwMTVaVWQ0WVZkRlJuWlViRTV5VXpCT1VtSklaR3BpVjNneFdrVk9ibUZXYUVWUldIQk9UVmhOTVZSV1kzZExNR3hIVVcxb2FrMHdOSHBaYWs1TFlUQnNSMVJ0YUdsU01GcDJVMWRzY2xNd1RsSmlSM0JwVFdwVmQxbFdZekZOVm5CU1kwUkNhRlo2Um5OVVJ6VlBZekZ3V0ZadVpFeFNSbFozVVRJMVEyVlhSbGhPVkVKTVVUQndhbFJWVWs1bGJHUTJZWHBDYVZaRVVtNVdWV1JIWlcxTmVscElXbXBpVmtadVZWY3hWMlJXYkZsVFYyeE1WVmM1VEZOWWJFTldSbXQ2VTI1Q2FsTkdSa3hSTW1SM1pHMU9OVTVZY0d4WFJUUjNWMnhqZDJJd2JIUlViazVoVmpCYU5WTlhiSEpUTWs1SlUyNUNhV0pzUm5aVFYyeEtZVlZPYm1OdGJITmpSWGh3WWtjNWNXRlhlSFpoYld4ellqSndjR0pIT1hGaFYzaDJZVzFzYzJJeWNIQmlSemx4WVZkNGQxUkhiSE5qUlhod1lrYzVjV0ZYZUhaYU1tUktVVEJTY0dKSE9YRmhWM2gyWVcxc2MyTkZlSEJpUnpsVllWZDRkbFpIYkhOaU1WSndZa2M1Y1dGWGVIWmhiV3h6WWpKd2NHSkhPWEZoVjNoMllXMXNjMk5HUW5CaVNFSlJZVmQ0ZG1GdGJITmlNbkJ3WWtjNWNXRlhlSFpoYld4ellqSmtiazVJUW1oU1ZGSjNXVlZWTUdOSFJrWlRWVTVDV2pCc1JGRlhaRXBVTUhSWVlWVTVURll5YkZCVE1XUndWREIwV0dGRlRrVmhWM2gyVmtkc2MySXljSEJpUnpseFlWZDRkbUZ0YkhOalJURk1Ua2hDYUZVd2JGQlRNV1J5WVZWU2NHSklRa3BhZWxKM1dWVlZNR05IUmtKT1NFSm9WV3BTZDFsV1RUQmpSMFpVVTFVNVRGWXliRVJTUjJ4ellqSmtiazVJUW1oVmVsSjNXVlpKTUdOSFJsVlRWVTVGWVZkNGRtRnRiSE5pTW5Cd1lraENTbHA2VW5kWlZsRXdZMGRHVkU1SVFtaFdSRkozV1ZWc1NsRXdSbTVPU0VKb1VWUlNkMWxXVFRCalIwWktUa2hDYUZOVVVuZFpWV3N3WTBkR1NrNUlRbWhTVld4RVVWZGtTbFF3ZEZoaGVYUk1WakpzVUZNeFpIQlVNSFJZWVROV1RGWXlaRkJUTVdSd1ZEQjBXRm93VGtWaFYzaDJZVzFzYzJJeWNIQmlTRUpLVTNwU2QxbFdTa3BVTUhSWVlUSnNSV0ZYZUhaV1IyeHpZakJTY0dKSVFrMWhWM2gzVWxkak1HTkhSbE5PU0VKb1ZXdHNSRkpIYkhOaU1tUnVVMVZPUldGWGVIZFRSMnh6WTBWc2JrNUlRbWhXUkZKM1dWVnJNR05IUmtwT1NFSm9WV3RzVUZNeFpISmtWWFJZWVRKV1RGWXlkREZUTVdSd1ZEQjBXR0ZWT1V4V01teEVVVmRqTUdOSFJsUk9TRUpvVTFSU2QxbFZiRXBSTUZKd1lrYzVSV0ZYZUhaaGJXeHpZakZHYmxOVk9VeFdNbk55VXpGa2NGUXdkRmhoVlU1Q1dqQnNSRkpIYkhOalJrSndZa2M1Y1dGWGVIWmhiV3h6WTBWV1RGTlZUa1ZoVjNoMlZrZHNjMkl3VW5CaVNFSktXakJzUkZKSGJITmpSVlp1VGtoQ2FGVnJiRkJUTVdSd1VUQlNjR0pIT1c1YWVsSjNXVlpPU2xRd2RGaGhNVTVGWVZkNGQxVkhiSE5pTW5Cd1lrYzVjV0ZYZUhkVVYyTXdZMGRHVTFOVk9VeFdNblF4VXpGa2Nrc3dkRmhoVlU1Q1ducFNkMWxWVlRCalIwWlRUa2hDYUZOVVVuZFpWV3N3WTBkR1JrNUlRbWhTVkZKM1dWVlZNR05IUmtaT1NFSm9VMVJTZDFsVmJFcFVNSFJZWVROV1RGWXliRkJUTVdSd1VUQkdibE5WVGtWaFYzaDNWRWRzYzJJeWNIQmlSemx1V2pCT01WTXhaSEprVlhSWVlWVTVURll5YkZCVE1XUndWREIwV0dGVk9VeFdNbXhRVXpGa2NGUXdkRmhoVlRsTVZqSjBNVk14WkhKa1ZYUllZVlU1VEZZeWJGQlRNV1J5WVZWU2NHSklRazFoVjNoMllXMXNjMkl5Y0hCaVNFSktXakJzVUZNeFpISmtWWFJZWVZVNVRGWXliRkJUTVdSeVlWVlNjR0pJUWtaYWVsSjNXVlpKTUdOSFJsUk9TRUpvVTFSU2QxbFZhekJqUjBaS1RraENhRk5VVW5kWlZrMHdZMGRHVlU1SVFtaFRWV3hFVVZkak1HTkhSbFZPU0VKb1UxUlNkMWxWYXpCalIwWlVUa2hDYUZWNlVuZFpWV3N3WTBkR1NrNUlRbWhWTUd4RVVWZGpNR05IUmxOT1NFSm9VMVJTZDFsVmF6QmpSMFpVVVROV1RGWXlkR3hUTVdSeVpGVjBXR0V5YkVWaFYzaDNWVWRzYzJORmFIQmlTRUpOWVZkNGQxTkhiSE5qUlhod1lraENUV0ZYZUhkVFYyTXdZMGRHVTFOVk9VeFdNblJzVXpGa2NtVlZVbkJpU0VKR1dqQnNVRk14WkhKaFZWSndZa2hDU1dGWGVIZFNWMlJLVVRCU2NHSklRa2xoVjNoM1VsZGpNR05IUmxST1NFSm9WV3RzVUZNeFpISmFWWFJZWVROV1RGWXlkSEJSVjJSS1ZEQjBXR0Y1ZEV4V01uUXhVekZrY0ZRd2RGaGhNbFpNVmpKMFZGSkhiSE5qUlhod1lraENSbG93YkVSU1IyeHpZMFZXYmxOVk9VeFdNblJTWTIxc2MyTkZhSEJpU0VKSllWZDRkMU5YWXpCalIwWlVVMVU1VEZZeWRGUlNSMnh6WTBWNGNHSklRa2xoVjNoM1VsZGtTbEV3VW5CaVNFSkpZVmQ0ZDFOWFl6QmpSMFpUVTFWT1Fsb3diRkJUTVdSeVZUQkdibE5WVGtKYWVsSjNXVlpLU2xRd2RGaGhNVTVDV25wU2QxbFdTa3BVTUhSWVlUSnNRbG93YkZCVE1XUnlaRlYwV0dFeWJFVmhWM2gzVTBkc2MyTkZWbTVUVlRsTVZqSjBWRkZYWkVwUk1FWnVVMVU1VEZZeWRGSmpiV3h6WTBWV2JrNUlRbWhWYTJ4UVV6RmtjbFV3VW5CaVNFSkdXbnBTZDFsV1NrcFVNSFJZWVRGT1Fsb3diRVJTUjJ4elkwVldibE5WVGtKYWVsSjNXVlpLU2xFd1JtNVRWVTVDV2pCc1JGRlhZekJqUjBaVFUxVk9RbG93YkZCVE1XUnlWVEJHYmxOVk9VeFdNblJ3VVZka1NsUXdkRmhoTVU1Q1dqQnNSRkZYWkVwVU1IUllZVEZPUWxvd2JFSmlNbVJLVkRCMFdHRXhUa1ZoVjNoM1VsZGtTbEV3Um01VFZUbE1WakowVkZGWFpFcFJNRkp3WWtoQ1Jsb3diRVJSVjJSS1VUQkdibE5WVGtKYU1HeEVVVmRrU2xRd2RGaGhNVTVDV25wU2QxbFdTa3BSTUVadVUxVk9SV0ZYZUhkU1YyUktWREIwV0dFeFRrSmFNR3hFVVZka1NsRXdVbkJpU0VKR1dqQnNSRkZWY3pCalIwWlRVMVZPUWxvd2JFUlJWMlJLVVRCR2JsTlZUa0phTUd4RVVWZGtTbEV3Um01VFZVNUNXakJzUkZGWFpFcFJNRVp1VTFWT1Fsb3diRVJSVjJSS1VUQkdibE5WVGtKYU1HeEVVVmRrU2xFd1JtNVRWVTVDV2pCc1JGRlhaRXBSTUVaTVVUSnNTbUZWYkhCaE1IUnFVMFZ3ZDFsdE5WSmlNR3h6WkROa1RtVnJOV2xVVmxKNlpXc3hjV042UWs1U2VrSndVekZHZDJOSFRrUlJWR3hLVTBVMGQxa3liRzlqUjBwMVVXcEdhMUV5WkhCVFZWWnZaRzFOZWxWWVdsUlhSVVV5VTFkc2NtTkZUblZSYmxwcVlteEdibFZHVGtOalIwcDFWVmM1YUZaNlZqTmFSbWhTWWpCc2NGRnNSbWxOTUc5M1ZESnNTbU5GZEZKalIzQm9VbnBzZDFkVVNsWmFNVUpVVVc1d2ExTkZiSFpaVm1NeFpESlNXVlZYT1VwaFZVcGhWVlpXTUZKc1VuQlJhMVpUVWxSc1ZWVkliRzlPVlhkNVRraENVR0ZWYkhkVE1VWjNUVWRHV0UxWGVHcGxWVVUxVTFWa2MyUlhVa1JoU0VKcFltdEplRnBGVG01aFZXeEhVVzFvV2sxdVVuTmFSV2hPV2pKT1NGWnViRXBTZW13eFYyeE9RMkZ0U1hsT1dGWmhWakEwZDFsV1l6VmtWVGx3VTFoQ1RGVllRWGRaVldoTFlrWnNXRlZ1Y0VwU1JFSnVXVlpqTVUxRmRFaGlTRlpxVTBaWmQxTXdUa3BhTVZwSVlVaHNZVll3V25KWk0zQjJZVlYwVkdFd2RHRlNNVnAwVTFWb1MwMVhTbkJhTTBKUVdqSTVTMWRyWkVkTlJteFVVVlJzU2xORmNHOVpiVEZUWkcxS1ZFNVhXbXRYUlhCdldXMHhVMlJ0U2xSYU0yaE9Va1ZyZDFNeFJuWlRiVVpVVVZSc1NsTkZjRzlaYlRGVFpHMUtWRTVYY0doU2VteDNWMVJLVm1Jd2RFUlRiVXBNWWtSQ2NGUkZUa3RaYTJ4WFRVZHNUVkV3Y0dsVFZFVjNZVlYwVkdFd2RFUlhSMUoyV1Zaa05HSkZiRWRWYm14clZqRlZNbEV5WkhKVGJWSkpVMnBXVUZveU9VdFJNVVp6Wld0c1JVMUhaR3BOYW14eFdWUktWMDFGZUhWVWJscGFUVzVTYzFwRlRtOWxiVWw1Vkc1S1lWZEdSakZWVmxaaFdteE9WazVWV2xkUk0yUnVXWHBKTldGdFJYbFdha0pOWWtVMVVWVlVRakJhYkVwR1drWk9VbFpVUW5kUk1tUnlVMnRPV0ZKdGRHRlRSV3h1VlVaT1FtSXlUWHBWYm14TVVqSjRNMU14VGpSalIwcDFWVmM1YWxKNmJEVmFSVTV5WTBWT2JtRXdjRVJXTVhBeVdUSnNRMDVGYkVoaVNGWktVMFZ3YjFsdE1XdGlSWFJKVlc1Q2FWWXhXalpUTVZKMlV6Qk9VbUV3Y0VSWFJURXhXWHBLVjJSV2NFbFZibHBNVWpGS2IxcEZaRVpqTVd4WVZXMTBhbUZYZEV4Uk1VWnlVMjFPU1ZOdVFtbGliRVoyV1ZaT1FtTnJiSEJSYlVwWVltMWtibFpyWkZkaFIwcFhUVWRrVjFKNmJIbFRWVnBUWkcxR05WRnNWbWxOYms1dVZsVmtSMk5zY0ZsVlYyaEtWVEJXY0ZNeFJuWlRhMDVZVm1wU1drMXNXak5hUlZKMlV6Qk9VbUV3Y0dwVFJYQjNXVzAxVW1Jd2JITmpNbWhaVlRCS1JsbHFUbXRrVld4VVVsZG9TbUZYZEV4Uk1qRlRZa1p3Y0ZGdWJHdFdlbEkxVXpCT2NrNXJUbTVpUjNSYVYwWktiMU5WVVhkYU1rNTBVbTVXWVZKNmJEQlVSM2MxVFZkT2RGSnVWbUZTZW13d1V6QlNSazFyZEZKaU1IQm9WVEJGTlZOVmFFdGhSMHAwVlc1YWFWVjZWbkZaVldNMVkwWnJlVlpYT1V4Uk1IQnBVekozZDJGVmVFUlRiVXBLVm1wQ2NGUkZUa3RaYTJ0NFRVZHNURlV5ZEV4Uk1XaHJZakpHV0dWSGVFcFNiRW8xV2taa1ZrNXJUbTVoTUhCclUwVnZNVlF5WkhaVGEwNVNZa2h3U2xKRVFtNVpla2sxWVcxRmVWWnFRazFpYXpVeVYxUktNR0pIVWtSaFNIQnBUV3MxZVZkc2FGSmtWa1pXVjIxYVZGWlVWa2RXYTA0eldqSk5lVTlYY0doTmJGbDNWRWQ0VDFWR1JYZGtSMXBXVFZaS1ZGVnNWa2RVYTNSU1lqQndSRlZYZURaVVJ6RlBaRzFLZEU1WGVGcE5NVVoyVXpCa2MyUXdlRWxSYmxwcVlteEdkMU14Um5aVGEwNVNZa2h3VFdKck5YTlpiVEZTWWpGd1NGSnFRbHBWTW5STVVURkdjbE5zY0hSUFdHeEtVMGRrYmxsV1l6QmFNazUwVW01V1lVMXNWblphUldSelpFWndXVlJZUWxCYU1qbExVVEZHY2xOdFRqVk9XSEJoVm5wV2NsTXdaRk5oUjFKSVVsaENSRm95ZEV0Uk1XaERaVmRHV0U1VVFreFNNblJ1VXpOc1Nsb3hZM2hqUkZKS1VteEtjMWRXWTNoYVJXeEhWVzVhYUdWVlNsWlpha3A2V2pGYVNFOVlTa3BTYTBwdldWUktWMDFGYkZSU1YyaEtZVmQwVEZFeFJuTmlSMVpJVkcxNGFsTkdSVEpSTW1SeVUydE9XVlJZVmxwTmJtZ3lXWHBLVm1Jd2RGSmlNSEJFVlZkNE0xa3lNWE5rVjFKRVdqSnNXR1ZZUW10VFZWWlRaRzFSZVU1SGFFcFZNRlp3VXpGR2RsTXhjSFJQV0d4S1UwZDBibGxXWXpCYU1rNTBVbTVXWVUxc1ZuWmFSV1J2WlZad1dGSnRkR3BsVjNNeVVUSmtjMk5HY0hCUmJYQm9VbnBzZDFkVVNsWmFNVUpWVFVka1MwMHlkSFZVTW1SMlUydE9XVlZ0T1VwU1JFSnVXa1ZrYjJWV2NGaFNiWFJvVm5wV2RWUkhlRk5pTWs1MFZtMW9ZVkV5WjNkWFZtaExZbXh3V1ZWWFpGRlZNRW8xV2taak1HTkZUbTVoTUhCclVqSmtNVmw2VGxOaFIwNTFWVmM1VEZWWE9VdFhiR1EwWld4d1ZXSXdkRVJWVjNkM1dWVk9RazlWYkVsVmJUbHFZbFphYjFkclpITmtWbkExVGxaV2FGTkZjSE5YVm1SU1lqSlNTRkp1YkdGTmJGbDNVMVZSZDFveVRuVldibFpPWVZkMFRGRXhSbk5OUjBaRVRsaHdhMUl3V2pWYVJVNXVZME5KY0V0UlBUMGlLU2s9Iikp"))"))